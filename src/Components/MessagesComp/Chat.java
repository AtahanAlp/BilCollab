package Components.MessagesComp;

import Main.User;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;
import java.util.Date;
import javax.swing.JPanel;

/**
 *
 * @author aeren
 */
public class Chat extends JPanel implements Comparable<Chat> {

    private int unseenMessages;
    private Date lastMessageTime;
    
    public Chat (User friend, String pfp, String message, MessagesPanel m, Date lastMessageTime) {
        initComponents();
        this.lastMessageTime = lastMessageTime;
        
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                
                m.updateDisplay(new MessagePanel(m, friend));
                
            }
        });
        
        setLastMessageArea();
        jLabel3.setText(friend.getDisplayName());
        repaint();
    }
    
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        Graphics2D g2d = (Graphics2D) g.create();
        
        int width = getWidth();
        int height = getHeight();
        int arc = 30;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setColor(new Color(0, 0, 0, 40));
        g2d.fill(new RoundRectangle2D.Double(2, 2, width, height, arc, arc));

        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setColor(getBackground());
        g2d.fill(new RoundRectangle2D.Double(0, 0, width - 1, height - 1, arc, arc));

        g2d.dispose();
    }
    
    private void setLastMessageArea () {
        
        if (hasMessagesBetweenUsers()) {
            if (unseenMessages > 0) {
                Font boldFont = new Font(jLabel2.getFont().getFamily(), Font.BOLD, jLabel2.getFont().getSize());
                jLabel2.setFont(boldFont);
            }

            if (unseenMessages > 1) {
                jLabel2.setText("2+ unread messages");
            } else {
                jLabel2.setText("Last sent message"); //todo
            }
            
        } else {
            jLabel2.setText("");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        imageAvatar1 = new Components.ImageAvatar();

        setBackground(new java.awt.Color(250, 250, 250));
        setOpaque(false);

        jLabel2.setText("LAST_SENT_MESSAGE");

        jLabel3.setText("NAME");

        imageAvatar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/profilePic.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(imageAvatar1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                    .addComponent(imageAvatar1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.ImageAvatar imageAvatar1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public int compareTo(Chat otherChat) {
        if (this.lastMessageTime == null && otherChat.lastMessageTime == null) {
            return 0; // Both lastMessageTimes are null, consider them equal
        } else if (this.lastMessageTime == null) {
            return 1; // This chat has no lastMessageTime, consider it greater
        } else if (otherChat.lastMessageTime == null) {
            return -1; // otherChat has no lastMessageTime, consider it greater
        } else {
            // Compare chats based on last sent message time
            return otherChat.lastMessageTime.compareTo(this.lastMessageTime);
        }
    }
    
    private boolean hasMessagesBetweenUsers() {
        return true; // dummy value
    }
}
