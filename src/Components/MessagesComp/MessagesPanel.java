package Components.MessagesComp;

import Components.AppFrame;
import Components.RefreshablePanel;
import javax.swing.BorderFactory;
import javax.swing.JScrollPane;
import Components.ScrollBarUI;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import Main.User;
import java.util.List;

/**
 *
 * @author Atahan
 */
public class MessagesPanel extends javax.swing.JPanel implements RefreshablePanel{

    private List<User> friends;
    private AppFrame a;
    private User curr;
    
    public MessagesPanel() {
        initComponents();
        
        Chats.setLayout(new GridBagLayout());
        Chats.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        ChatsScrollPane.setBorder(null);
        ChatsScrollPane.setViewportView(Chats);
        ChatsScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        ChatsScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        ChatsScrollPane.getVerticalScrollBar().setUI(new ScrollBarUI());
        ChatsScrollPane.getViewport().setBackground(new Color(255, 255, 255));
    }
    
    public void refresh(){
        this.friends = curr.getFriends();
        displayAllChats();
    }
    
    private void displayAllChats () {
        for (User friend : friends) {
            addChat(friend);
        }
    }

    
    private void addChat (User friend) {
        Chat c = new Chat (friend, "e", "e", this);
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = GridBagConstraints.RELATIVE;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        
        Chats.add(c, gbc);
        Chats.revalidate();
    }
    
    public void updateDisplay (MessagePanel m) {
        Chats.removeAll();
        if (m != null) {
            m.setBorder(BorderFactory.createLineBorder(null));
            m.setVisible(true);
            Chats.add(m);
            ChatsScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        } else {
            displayAllChats();
            ChatsScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        }
        
        Chats.revalidate();  
    }
    
    public void setAppframe (AppFrame a) {
        this.a = a;
    }
    
    public void setUser (User u) {
        this.curr = u;
    }
    
    public AppFrame getAppFrame () {
        return a;
    }
    
    public User getCurrentUser () {
        return curr;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChatsScrollPane = new javax.swing.JScrollPane();
        Chats = new Components.RoundedPanel();

        setBackground(new java.awt.Color(255, 204, 204));
        setMaximumSize(new java.awt.Dimension(1150, 800));
        setMinimumSize(new java.awt.Dimension(1150, 800));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1150, 800));

        ChatsScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        ChatsScrollPane.setBorder(null);

        Chats.setBackground(new java.awt.Color(255, 255, 255));
        Chats.setMaximumSize(new java.awt.Dimension(1050, 700));
        Chats.setMinimumSize(new java.awt.Dimension(1050, 700));

        javax.swing.GroupLayout ChatsLayout = new javax.swing.GroupLayout(Chats);
        Chats.setLayout(ChatsLayout);
        ChatsLayout.setHorizontalGroup(
            ChatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ChatsLayout.setVerticalGroup(
            ChatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        ChatsScrollPane.setViewportView(Chats);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(ChatsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(ChatsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.RoundedPanel Chats;
    private javax.swing.JScrollPane ChatsScrollPane;
    // End of variables declaration//GEN-END:variables
}
