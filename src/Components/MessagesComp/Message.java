package Components.MessagesComp;

import Components.RoundedPanel;
import Main.DatabaseConnection;
import java.awt.Color;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JTextArea;
import java.time.LocalDateTime;
import java.sql.*;


/**
 *
 * @author aeren
 */
public class Message extends javax.swing.JPanel {

    private String content;
    private int senderId;
    private int receiverId;
    private String time;
    private boolean seen;
    private int id;
    
    /**
     * Creates new form Message
     */
    public Message(int senderId, int receiverId, String content) {
        initComponents();
        
        LocalTime currentTime = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM HH:mm");
        String formattedTime = currentTime.format(formatter);
        
        this.senderId = senderId;
        this.receiverId = receiverId;
        this.content = content;
        this.time = formattedTime;
        this.seen = false;
        MessageContent.setText (this.content);
        
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));
        timeLabel.setText (time);
    }
    
    public Message (int senderId, int receiverId, String content, int id, String time, boolean seen) {
        initComponents();
        this.senderId = senderId;
        this.receiverId = receiverId;
        this.content = content;
        this.time = time;
        this.seen = false;
        MessageContent.setText (this.content);
        
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 0, 20, 0));
        timeLabel.setText (time);
    }
    
    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }
    
    public void database() {
        try (Connection conn = DatabaseConnection.getConnection()) {
            String query = "INSERT INTO Messages (id, content, creationDate, sender_id, receiver_id, isSeen) VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setInt(1, id); 
                stmt.setString(2, content);
                stmt.setString(3, LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));
                stmt.setInt(4, senderId);
                stmt.setInt(5,receiverId );
                stmt.setBoolean(6, seen);
                stmt.executeUpdate();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public int getId() {
        return this.id;
    }
    
    public int getSenderId() {
        return senderId;
    }
    
    public void setSenderId (int id) {
        this.senderId = id;
    }
    
    public int getReceiverId() {
        return receiverId;
    }

    public void setReceiverId(int receiverId) {
        this.receiverId = receiverId;
    }
    
    public String getTime () {
        return this.time;
    }
    
    public void setTime (String t) {
        this.time = t;
    }
    
    public boolean isSeen() {
        return seen;
    }

    public void setSeen(boolean seen) {
        this.seen = seen;
    }
    
    public JTextArea getTextArea () {
        return this.MessageContent;
    }
    
    public RoundedPanel getRoundedPanel () {
        return this.roundedPanel1;
    }
    
    public void setTimeColor (Color c) {
        timeLabel.setForeground(c);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundedPanel1 = new Components.RoundedPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MessageContent = new javax.swing.JTextArea();
        timeLabel = new javax.swing.JLabel();

        setOpaque(false);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        MessageContent.setColumns(20);
        MessageContent.setRows(5);
        MessageContent.setText("your message here");
        MessageContent.setBorder(null);
        MessageContent.setMaximumSize(new java.awt.Dimension(232, 84));
        MessageContent.setMinimumSize(new java.awt.Dimension(232, 84));
        jScrollPane1.setViewportView(MessageContent);

        timeLabel.setForeground(new java.awt.Color(102, 102, 102));
        timeLabel.setText("jLabel1");

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(timeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea MessageContent;
    private javax.swing.JScrollPane jScrollPane1;
    private Components.RoundedPanel roundedPanel1;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
